- table:
    schema: public
    name: device
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: userId
  insert_permissions:
  - role: user
    permission:
      check:
        user:
          id:
            _eq: X-Hasura-User-Id
      set:
        userId: x-hasura-User-Id
      columns:
      - name
      - token
      - type
      - userId
      backend_only: false
  update_permissions:
  - role: user
    permission:
      columns:
      - createdAt
      - name
      - token
      - type
      - updatedAt
      filter:
        user:
          id:
            _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: file
  insert_permissions:
  - role: user
    permission:
      check:
        userId:
          _eq: X-Hasura-User-Id
      set:
        userId: x-hasura-User-Id
      columns:
      - cloudFrontData
      - contentLength
      - domain
      - fileType
      - groupId
      - mimeType
      - name
      - postId
      - userId
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - created_at
      - updated_at
      - fileType
      - postId
      - groupId
      - userId
      - name
      - mimeType
      - contentLength
      - cloudFrontData
      - domain
      filter:
        userId:
          _eq: X-Hasura-User-Id
  update_permissions:
  - role: user
    permission:
      columns:
      - cloudFrontData
      - contentLength
      - domain
      - fileType
      - groupId
      - mimeType
      - name
      - postId
      - userId
      filter:
        userId:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        userId:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: fileType
  is_enum: true
  select_permissions:
  - role: user
    permission:
      columns:
      - type
      filter: {}
- table:
    schema: public
    name: group
  object_relationships:
  - name: location
    using:
      foreign_key_constraint_on: locationId
  array_relationships:
  - name: files
    using:
      foreign_key_constraint_on:
        column: groupId
        table:
          schema: public
          name: file
  - name: posts
    using:
      foreign_key_constraint_on:
        column: groupId
        table:
          schema: public
          name: post
  - name: userGroup
    using:
      foreign_key_constraint_on:
        column: groupId
        table:
          schema: public
          name: userGroup
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - createdAt
      - updatedAt
      - name
      - description
      - locationId
      - isPrivate
      filter: {}
- table:
    schema: public
    name: location
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - createdAt
      - updatedAt
      - name
      - city
      - state
      - country
      - countryCode
      - formattedAddress
      - latitude
      - longitude
      - addressForLanguage
      filter: {}
- table:
    schema: public
    name: post
  object_relationships:
  - name: group
    using:
      foreign_key_constraint_on: groupId
  - name: user
    using:
      foreign_key_constraint_on: userId
  array_relationships:
  - name: files
    using:
      foreign_key_constraint_on:
        column: postId
        table:
          schema: public
          name: file
  insert_permissions:
  - role: user
    permission:
      check:
        userId:
          _eq: X-Hasura-User-Id
      set:
        userId: x-hasura-User-Id
      columns:
      - body
      - groupId
      - userId
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - createdAt
      - updatedAt
      - userId
      - groupId
      - body
      filter:
        _or:
        - userId:
            _eq: X-Hasura-User-Id
        - group:
            userGroup:
              userId:
                _eq: X-Hasura-User-Id
        - groupId:
            _is_null: true
  update_permissions:
  - role: user
    permission:
      columns:
      - body
      filter:
        userId:
          _eq: X-Hasura-User-Id
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        userId:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: reaction
  is_enum: true
  select_permissions:
  - role: user
    permission:
      columns:
      - name
      filter: {}
- table:
    schema: public
    name: user
  array_relationships:
  - name: devices
    using:
      foreign_key_constraint_on:
        column: userId
        table:
          schema: public
          name: device
  - name: files
    using:
      foreign_key_constraint_on:
        column: userId
        table:
          schema: public
          name: file
  - name: posts
    using:
      foreign_key_constraint_on:
        column: userId
        table:
          schema: public
          name: post
  - name: userGroup
    using:
      foreign_key_constraint_on:
        column: userId
        table:
          schema: public
          name: userGroup
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - name
      - email
      - createdAt
      - updatedAt
      filter:
        id:
          _eq: X-Hasura-User-Id
  update_permissions:
  - role: user
    permission:
      columns:
      - name
      filter:
        id:
          _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: userGroup
  object_relationships:
  - name: group
    using:
      foreign_key_constraint_on: groupId
  - name: user
    using:
      foreign_key_constraint_on: userId
  insert_permissions:
  - role: user
    permission:
      check:
        _or:
        - _and:
          - group:
              isPrivate:
                _eq: false
          - userId:
              _eq: X-Hasura-User-Id
        - group:
            userGroup:
              _and:
              - userId:
                  _eq: X-Hasura-User-Id
              - isAdmin:
                  _eq: true
      columns:
      - groupId
      - userId
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - groupId
      - userId
      filter:
        _or:
        - userId:
            _eq: X-Hasura-User-Id
        - group:
            userGroup:
              userId:
                _eq: X-Hasura-User-Id
  update_permissions:
  - role: user
    permission:
      columns:
      - groupId
      - userId
      filter:
        _or:
        - userId:
            _eq: X-Hasura-User-Id
        - group:
            userGroup:
              _and:
              - userId:
                  _eq: X-Hasura-User-Id
              - isAdmin:
                  _eq: true
      check: null
  delete_permissions:
  - role: user
    permission:
      filter:
        _or:
        - userId:
            _eq: X-Hasura-User-Id
        - group:
            userGroup:
              _and:
              - userId:
                  _eq: X-Hasura-User-Id
              - isAdmin:
                  _eq: true
- table:
    schema: public
    name: userPostReaction
  select_permissions:
  - role: user
    permission:
      columns:
      - userId
      - postId
      - reaction
      filter: {}
